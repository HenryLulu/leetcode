/**
 * 【题目】
 * 给定一个非空整数数组，除了某个元素只出现一次以外，其余每个元素均出现两次。找出那个只出现了一次的元素。
说明：你的算法应该具有线性时间复杂度。 你可以不使用额外空间来实现吗？

示例 1:
输入: [2,2,1]
输出: 1

示例 2:
输入: [4,1,2,1,2]
输出: 4
 */

/**
 * 【解析】
 * 异或
 * 对一位二进制进行异或操作，双数的 0 或 1 都会成 0，最终保留单独的 0/1
 */

// code
var singleNumber = function(nums) {
    return nums.reduce((a, b) => a ^ b);
};

// test
console.log(singleNumber([4,1,2,1,2]));