/**
 * 【题目】
 * 根据每日 气温 列表，请重新生成一个列表，对应位置的输入是你需要再等待多久温度才会升高的天数。如果之后都不会升高，请输入 0 来代替。
例如，给定一个列表 temperatures = [73, 74, 75, 71, 69, 72, 76, 73]，你的输出应该是 [1, 1, 4, 2, 1, 1, 0, 0]。
提示：气温 列表长度的范围是 [1, 30000]。每个气温的值的都是 [30, 100] 范围内的整数。
 */

/**
 * 【解析】
 * 一个大数的出现，总会让他后面比他小的数失去意义。比如72向后找，到76为止，永远不会找到73；74向后找，可参考的只有75、76，中间三位没用了
 * 单调栈：
 * 总是保存着当前元素右侧，单调增的元素（有参考价值的元素）子集，比如75右侧的 71、72、76，去掉了没有参考价值的元素，提供“逐个比较”的环境
 * 从右侧遍历，遍历到一个数时，把栈中所有没自己大的全部剃掉，换成自己；压入自己前遇到的大元素，就是第一个比自己大的元素
 */

// code
var dailyTemperatures = function (T) {
    // 记录下标，相当于统计记录了值和位置
    const stack = [];
    const res = new Array(T.length);
    for (let i = T.length - 1; i > -1; i--) {
        while (T[stack[0]] <= T[i]) {
            stack.shift();
        }
        res[i] = stack.length > 0 ? stack[0] - i : 0;
        stack.unshift(i);
    }
    return res;
};

// test
console.log(dailyTemperatures([89,62,70,58,47,47,46,76,100,70]));